// room script file

function oBread_Look(Object *theObject, CursorMode mode)
{
 player.Say("Bread is good for sandwhiches to feed my friends.");
}

function oBread_Interact(Object *theObject, CursorMode mode)
{
  WalkToObjectAndPickup(theObject);
  cMonty.AddInventory(iBread);
}

function oSpoon_Interact(Object *theObject, CursorMode mode)
{
  WalkToObjectAndPickup(theObject);
  cMonty.AddInventory(iSpoon);
}

function oSpoon_Look(Object *theObject, CursorMode mode)
{
  player.Say("This could be useful for... scooping EYEballs!");
}

function room_RepExec()
{
 //exec 6 (all the stuff to autochange the cursor)
 Object *hoveredObject = Object.GetAtScreenXY(mouse.x, mouse.y);
 Character *hoveredChar = Character.GetAtScreenXY(mouse.x, mouse.y);
 GUI *hoveredGUI = GUI.GetAtScreenXY(mouse.x, mouse.y);
 //nil
 if (gInventory.Visible || gHelpGUI01.Visible || gHelpGUI02.Visible || gHelpGUI03.Visible)
  {
  }
 else
 {
 if (mouse.Mode!=4)
 {
   if (hoveredObject == null && hoveredChar == null && hoveredGUI==null)
   {
     mouse.Mode=0;
   }
   else if (hoveredObject != null)
   {
     String description = hoveredObject.GetTextProperty("Description");
     if (description == "Puzzle")
     {
       mouse.Mode=1;
     }
     else if (description == "Pickup")
     {
       mouse.Mode=2;
     }
     else if (description == "Floor")
     {
       mouse.Mode=0;
     }
   }
   else if (hoveredChar!=null)
   {
     String description = hoveredChar.GetTextProperty("Description");
     if (description == "Character")
     {
       mouse.Mode=3;
     }
     else if (description == "Pickup")
     {
       mouse.Mode=2;
     }
   }
 }
 }
}

function repeatedly_execute_always()
{
  //if 
}

function oLadder_Interact(Object *theObject, CursorMode mode)
{
WalkToObjectAndPickup(theObject);
cMonty.AddInventory(iLadder);
}

function hHotspot1_UseInv(Hotspot *theHotspot, CursorMode mode)
{
  if (player.ActiveInventory == iLadder)
  {
    oLadder2.SetPosition(540, 1320);
    cMonty.LoseInventory(iLadder);
    RestoreWalkableArea(2);
  }
}

function room_Load()
{
region[1].Enabled=false;
RemoveWalkableArea(2);
}

function hHotspot2_UseInv(Hotspot *theHotspot, CursorMode mode)
{
if (player.ActiveInventory==iLegs)
  {
    //oGroundLegs.SetPosition(832, 1178);
    //Puzzle01Stage=10; NOT SURE if I can actually delete this...
    //player.LoseInventory(iLegs);
  }
}

function oGroundLegs_Interact(Object *theObject, CursorMode mode)
{
if (theObject.Graphic==69)
  {
  WalkToObjectAndPickupTall(theObject);
  player.AddInventory(iSludge);
  }
else
{
  cMonty.Think("Gotta grind some meat before I take the plate...");
}
}

function hHotspot3_WalkOn(Hotspot *theHotspot)
{
if (Puzzle01Stage==11)
{
  player.ChangeRoom(3, 250, 575, eDirectionRight);
}
}

function hHotspot4_Interact(Hotspot *theHotspot, CursorMode mode)
{
    if (region[1].Enabled==true)
    {
      region[1].Enabled=true;
    }
    else
    {
      region[1].Enabled=false;
    }
    //oGroundLegs.SetPosition(832, 1178);
}

function oButton_Interact(Object *theObject, CursorMode mode)
{
if (Puzzle01Stage==10)
  {
  region[1].Enabled=true;
  cMonty.Walk(theObject.X, theObject.Y+250, eBlock, eWalkableAreas);
  cMonty.LockView(43);
  cMonty.Animate(0, 3, eOnce, eBlock);
  oButton.Visible=false;
  cMonty.Animate(1, 3, eOnce, eBlock);
  cMonty.UnlockView();
  oBigGrinder.SetView(35);
  aMachine.Play();
  oBigGrinder.Animate(0, 5, eOnce, eBlock);
  oBigGrinder.Animate(0, 4, eOnce, eBlock);
  oBigGrinder.Animate(0, 3, eOnce, eBlock);
  oBigGrinder.Animate(0, 2, eOnce, eBlock);
  oBigGrinder.Animate(0, 1, eRepeat, eNoBlock);
  Wait(40);
  oMeatAnim.SetPosition(684, 1196);
  oMeatAnim.SetView(36);
  aSpew1.Play();
  oMeatAnim.Animate(0, 4, eOnce, eNoBlock);
  Wait(40);
  oGroundLegs.Graphic=69;
  Wait(20);
  oBigGrinder.Animate(0, 2, eOnce, eBlock);
  oBigGrinder.Animate(0, 3, eOnce, eBlock);
  oBigGrinder.Animate(0, 4, eOnce, eBlock);
  oBigGrinder.Animate(0, 5, eOnce, eBlock);
  oBigGrinder.SetView(35);
  oButton.Visible=true;
  oButton.Graphic=279;
  Puzzle01Stage=11;
  
  //if (Puzzle01Stage==10)
  //{
  //  Puzzle01Stage=11;
  //  oGroundLegs.SetPosition(832,  1178);
  //}
  }
  else
  {
    oButton.Graphic=279;
    region[1].Enabled=false;
    cMonty.Think("Shouldn't turn it on without the meat in the hopper...");
  }
}

function oBigGrinder_UseInv(Object *theObject, CursorMode mode)
{
  if (player.ActiveInventory == iLadder)
  {
    oLadder2.SetPosition(450, 1370);
    cMonty.LoseInventory(iLadder);
    RestoreWalkableArea(2);
    oBigGrinder.SetTextProperty("Description", "Null");
  }
}

function oGrinderTop_UseInv(Object *theObject, CursorMode mode)
{
if (player.ActiveInventory==iLegs)
  {
    //oGroundLegs.SetPosition(832, 1178);
    Puzzle01Stage=10;
    player.LoseInventory(iLegs);
    cMonty.Walk(theObject.X, theObject.Y, eBlock, eWalkableAreas);
    oPantsGrind.SetPosition(cMonty.x+10, cMonty.y+55);
    oPantsGrind.SetView(38);
    oPantsGrind.Animate(0, 3, eOnce, eNoBlock);
  }
}

function oBigGrinder_Look(Object *theObject, CursorMode mode)
{
player.Think("Wow that's a tall meat grinder!");
}

function oGrindOverlay_UseInv(Object *theObject, CursorMode mode)
{
cMonty.Think("I should drop the legs into the hole...");
}

function hHotMontDie_WalkOn(Hotspot *theHotspot)
{
DeathCount++;
CheckDeathCount();
if (ACHMeat==false)
{
  ACHMeat=true;
  iACH07.Graphic=432;
}
cBlank.x=cMonty.x;
cBlank.y=cMonty.y;
cMonty.LockView(58);
cBlank.SetAsPlayer();
oMontyDying.X=532;
oMontyDying.Y=cBlank.y-20;
cBlank.Walk(oGroundLegs.X+300, oGroundLegs.Y, eNoBlock, eAnywhere);
while (oMontyDying.Y<772)
  {
    oMontyDying.Y += 10;              // Move Monty down by 10 pixels
    Wait(1);                  // Pause for a short time to make the movement smooth
  }
oMontyDying.X=1320;
if (cBlank.Animating==false)
{
  oBigGrinder.SetView(35);
  aMachine.Play();
  oButton.Visible=false;
  oBigGrinder.Animate(0, 5, eOnce, eBlock);
  oBigGrinder.Animate(0, 4, eOnce, eBlock);
  oBigGrinder.Animate(0, 3, eOnce, eBlock);
  oBigGrinder.Animate(0, 2, eOnce, eBlock);
  oBigGrinder.Animate(0, 1, eRepeat, eNoBlock);
  Wait(40);
  oMeatAnim.SetPosition(684, 1196);
  oMeatAnim.SetView(56);
  aSpew1.Play();
  oMeatAnim.Animate(0, 4, eOnce, eNoBlock);
  Wait(40);
  oGroundLegs.Graphic=418;
  Wait(20);
  oBigGrinder.Animate(0, 2, eOnce, eBlock);
  oBigGrinder.Animate(0, 3, eOnce, eBlock);
  oBigGrinder.Animate(0, 4, eOnce, eBlock);
  oBigGrinder.Animate(0, 5, eOnce, eBlock);
  oBigGrinder.SetView(35);
  oButton.Visible=true;
  oGroundLegs.Graphic=294;
  cMonty.SetAsPlayer();
  cMonty.UnlockView();
  cMonty.x=200;
  cMonty.y=1370;
}
}

function room_FirstLoad()
{
Puzzle01Stage=8;
}
