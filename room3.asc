// room script file

function SoftLoad()
{
 mouse.Mode=2;
 Wait(UIPapersDelaySlow);
 gQuestKitchen.Visible=true;
 aPapermix.Play();
 Wait(UIPapersDelayFast);
 gQuestAttic.Visible=true;
 aPapermix.Play();
 Wait(UIPapersDelayFast);
 gQuestLivingRoom.Visible=true;
 aPapermix.Play();
 Wait(UIPapersDelaySlow);
 gQuestLivingRoom.Controls[2].AsLabel.Visible=true;
 aWriting.Play();
 Wait(UIPapersDelaySlow);
 gQuestLivingRoom.Controls[3].AsLabel.Visible=true;
 aWriting.Play();
 Wait(UIPapersDelaySlow);
  gQuestLivingRoom.Controls[4].AsLabel.Visible=true;
 aWriting.Play();
 Wait(UIPapersDelaySlow);
  gQuestLivingRoom.Controls[5].AsLabel.Visible=true;
 aWriting.Play();
 Wait(UIPapersDelaySlow);
}

bool tshirtFlying = false;
int tshirtFrame = 0;
int tshirtStartX;
int tshirtStartY;
int tshirtXSpeed = 3; // pixels per frame
int tshirtYSpeed = 8; // initial upward velocity
float tshirtGravity = 0.5; // pixels per frame^2

function Tshirtblow()
{
  oTShirt.X=cHuman01.x;
  oTShirt.Y=cHuman01.y-100;
  tshirtFrame = 0;
  tshirtStartX=oTShirt.X;
  tshirtStartY=oTShirt.Y;
  tshirtFlying=true;
}

function sendInTheFriends()
{
  if (PuzzleNum==4)
  {
    ShouldCountTimer=false;
    Puzzle01Stage=12;
    cMonty.Walk(400, 700, eNoBlock, eWalkableAreas);
    cGhosty.x=1270;
    cGhosty.y=560;
    // open door
    aOpenDoor.Play();
    int finalY = oFrontDoor.Y - 200;  // Raise the object by 50 pixels
    while (oFrontDoor.Y > finalY)
      {
        oFrontDoor.Y -= 5;              // Move object up by 1 pixel
        Wait(1);                  // Pause for a short time to make the movement smooth
      }
     DoorUp=true;
     RestoreWalkableArea(4);
    //end re-open door
    cGhosty.Walk(920, 700, eNoBlock, eWalkableAreas);
    Wait(20);
    cOcty.x=1270;
    cOcty.y=560;
    cOcty.Walk(826, 602, eNoBlock, eWalkableAreas);
    Wait(20);
    cBuzzy.x=1270;
    cBuzzy.y=560;
    cBuzzy.Walk(504, 612, eBlock, eWalkableAreas);
    oStreamersGrey.Graphic=514;
    //Display("Happy Birthday Monty!");
    gReplay.Visible=true;
    GameSpeedSeconds=(GameSpeedMinutes*60)+GameSpeedSeconds;
    if (GameSpeedSeconds<300)
    {
      cMonty.Say("You beat Brian Heagney's runthrough time!");
      AchievementNew=true;
      iACH10.Graphic=443;
    }
  }
}

function ResetBalloons()
{
  oEyeBalloons.X=258;
  oEyeBalloons.Y=468;
}

function RaiseBalloons()
{
  while (oEyeBalloons.Y>390)
  {
    oEyeBalloons.Y=oEyeBalloons.Y-2;
    Wait(1);
  }
  aCat.Play();
  cCat.y=cCat.y-60;
  cCat.Walk(-100, 175, eBlock, eAnywhere);
}

function oSpoon_Interact(Object *theObject, CursorMode mode)
{
//SayTypewriterStyle(cMonty, "hey I'm talking like a typewriter", 2);
WalkToObjectAndPickupTall(theObject);
cMonty.AddInventory(iSpoon);
}

function oSaw_Interact(Object *theObject, CursorMode mode)
{
WalkToObjectAndPickup(theObject);
cMonty.AddInventory(iSaw);
}

function room_RepExec()
{
  if (cMonty.x<1000 && cMonty.HasInventory(iHeliumTank) && CanSlamDoor==true)
  {
    CanSlamDoor=false;
    SlamDoor=true;
  }
  if (SlamDoor==true)
  {
    SlamDoor=false;
    int finalY = oFrontDoor.Y + 200;  // Lower the object by 200 pixels
    while (oFrontDoor.Y < finalY)
      {
        oFrontDoor.Y += 20;              // Move down up by 10 pixel
        Wait(1);                  // Pause for a short time to make the movement smooth
      }
     aDoorslam.Play();
     DoorUp=true;
     RemoveWalkableArea(4); //RestoreWalkableArea(4);
  }
 // exec 0 (spoon sound) 
 // exec 1
 if (cHuman01.Animating && cHuman01.View == 5)
 {
   if (cHuman01.Loop == 0 && cHuman01.Frame == 1)
   {
     aSquirt.Play();
   }  
 }
 // exec 2
 if(EyeballAnim==true)
 {
   EyeballAnim=false;
   oEyefall.Visible=true;
   oEyefall.SetView(15);
   oEyefall.Animate(0, 3, eOnce, eBlock);
   oEyeballs.Visible=true;
   oEyefall.Visible=false;
 }
 //exec 3
 //if ((Puzzle01Stage==2 || Puzzle01Stage==3 || Puzzle01Stage==4) && cHuman01.y ==HumanWalkAY)
 //{
 //  cHuman01.Walk(1032, 677, eNoBlock, eAnywhere);
 //  HumWalkUp=2;
 //}
 //exec 4
 //if ((Puzzle01Stage==2 || Puzzle01Stage==3 || Puzzle01Stage==4) && cHuman01.y>670)
 //{
 //  cHuman01.Walk(HumanWalkAX, HumanWalkAY, eNoBlock, eAnywhere);
 //  HumWalkUp=1;
 //}
 //exec 5
 if (HeadRoll==true)
 {
   HeadRoll=false;
   oHeadRoll.SetView(17);
   oHeadRoll.SetPosition(cHuman01.x, cHuman01.y);
   oHeadRoll.Visible=true;
   oHeadRoll.Animate(0, 3, eOnce, eBlock);
   oHead.SetPosition(oHeadRoll.X+125, oHeadRoll.Y);
   oHeadRoll.Visible=false;
   oHeadRoll.X=-200;
  
 }
 //exec 6 (all the stuff to autochange the cursor
 Object *hoveredObject = Object.GetAtScreenXY(mouse.x, mouse.y);
 Character *hoveredChar = Character.GetAtScreenXY(mouse.x, mouse.y);
 GUI *hoveredGUI = GUI.GetAtScreenXY(mouse.x, mouse.y);
 //nil
 //the following code will check to see if it's my cozy stuff like carpet!
 if (oCarpet.Graphic==450 || oCarpet.Graphic==449)
 {
  if (Object.GetAtScreenXY(mouse.x, mouse.y)==oCarpet)
  {
    oCarpet.Graphic=449;
  }
 else oCarpet.Graphic=450;
 }
 if (oTable.Graphic==453 || oTable.Graphic==454 )
 {
   if (Object.GetAtScreenXY(mouse.x, mouse.y)==oTable)
   {
     oTable.Graphic=453  ;
   }
   else oTable.Graphic=454  ;
 }

 // the following autochanges the mouse mode based on object type
 if (gInventory.Visible || gHelpGUI01.Visible || gHelpGUI02.Visible || gHelpGUI03.Visible || gAchievements.Visible)
  {
  }
 else if (UIMouseMode==false)
 {
 if (mouse.Mode!=4)
 {
   if (hoveredObject == null && hoveredChar == null && hoveredGUI==null)
   {
     mouse.Mode=0;
   }
   else if (hoveredObject != null)
   {
     String description = hoveredObject.GetTextProperty("Description");
     if (description == "Puzzle")
     {
       mouse.Mode=1;
     }
     else if (description == "Pickup")
     {
       mouse.Mode=2;
     }
     if (Object.GetAtScreenXY(mouse.x, mouse.y) == oFrontDoor)
     {
       mouse.Mode=2;
     }
   }
   else if (hoveredChar!=null)
   {
     String description = hoveredChar.GetTextProperty("Description");
     if (description == "Character")
     {
       mouse.Mode=3;
     }
     else if (description == "Pickup")
     {
       mouse.Mode=2;
     }
   }
 }
 }
 //exec7 legs run through boards
 if (cHuman01.IsCollidingWithObject(oBoardsL)==1 || cHuman01.IsCollidingWithObject(oBoardsR)==1)
 {
   aCrash.Play(eAudioPriorityHigh);
   oWoodBreak.SetPosition(2, 600);
   oWoodBreak.SetView(34);
   oWoodBreak.Animate(0, 2, eOnce, eNoBlock);
   oBoardsL.Graphic=259;
   oBoardsR.Graphic=260;
   RestoreWalkableArea(5);
   cHuman01.Walk(0, 546, eBlock);
   cHuman01.ChangeRoom(4, 152, 1252, eDirectionLeft);
 }
 if (ShouldExplode==true)
 { 
   DeathCount++;
   CheckDeathCount();
   if (Puzzle01Stage<4)
   {
    if (ACHBeat==false)
     {
       AchievementNew=true;
       ACHBeat=true;
       iACH03.Graphic=432;
       CheckDeathCount();
     }
   ShouldExplode=false;
   cMonty.x=cHuman01.x-40;
   cMonty.y=cHuman01.y-20;
   cHuman01.LockView(52);
   cHuman01.Animate(0, 1, eRepeat, eNoBlock);
   cMonty.LockView(53);
   cMonty.Animate(0, 3, eOnce, eBlock);
   Wait(50);
   cHuman01.LockView(16);
   cMonty.x=270;
   cMonty.y=633;
   cMonty.UnlockView();
   cMonty.LoseInventory(iHeliumTank);
   oHeliumTank.Visible=true;
   oHeliumTank.SetPosition(1127, 519);
   if (oFrontDoor.Y>500)
   {
     oFrontDoor.Y=oFrontDoor.Y-200;
   }
   CanSlamDoor=true;
   SlamDoor=false;
   RestoreWalkableArea(4);
   HumanWalkAX=970;
   HumanWalkAY=533;
   HumanWalkBX=1150;
   HumanWalkBY=666;
   cHuman01.Walk(HumanWalkBX, HumanWalkBY, eNoBlock, eAnywhere);
   //cCat.Scaling=100;
   cCat.x=348;
   cCat.y=294;
   oAtticDoor.SetView(49, 0, 0);
   IsAtticDoorOpen=false;
   
   if (oEyeBalloons.Graphic==73)
   {
     Puzzle01Stage = 2;
     oEyeBalloons.Graphic=72;
     cMonty.AddInventory(iEyes);
     ResetBalloons();
   }
   if (cMonty.HasInventory(iEyeBalloons))
   {
     cMonty.LoseInventory(iEyeBalloons);
     cMonty.AddInventory(iEyes);
   }
   }
   else if (Puzzle01Stage==4)
   {
    if (ACHBeat==false)
    {
      AchievementNew=true;
      ACHBeat=true;
      iACH03.Graphic=432;
      CheckDeathCount();
    }
   ShouldExplode=false;
   cMonty.x=cHuman01.x-40;
   cMonty.y=cHuman01.y-20;
   cHuman01.LockView(52);
   cHuman01.Animate(0, 1, eRepeat, eNoBlock);
   cMonty.LockView(53);
   cMonty.Animate(0, 3, eOnce, eBlock);
   Wait(50);
   cHuman01.LockView(16);
   cMonty.x=330;
   cMonty.y=214;
   cMonty.UnlockView();
   HumanWalkAX=970;
   HumanWalkAY=533;
   HumanWalkBX=1150;
   HumanWalkBY=666;
   cHuman01.Walk(HumanWalkBX, HumanWalkBY, eNoBlock, eAnywhere);
   }
   else
   {
     DeathCount++;
     CheckDeathCount();
     if (ACHDyno2==false)
     {
       AchievementNew=true;
       ACHDyno2=true;
       iACH06.Graphic=432;
     }
     ShouldExplode=false;
     cMonty.LockView(28);
     cMonty.Animate(0, 3, eOnce, eBlock);
     cMonty.x=332;
     cMonty.y=210;
     cMonty.UnlockView();
     
   }
   
 }
 //check send in the friends - this is necessary because I added the quest pages to open up and cross off.
 if (CheckSendInTheFriends==true)
 {
   CheckSendInTheFriends=false;
   sendInTheFriends();
 }
 //if (cHuman01.IsCollidingWithChar(cMonty))// && cHuman01.y>cMonty.y && HumWalkUp==1)
 //{
   //QuitGame(1);
 //  cMonty.LockView(28);
 //  cMonty.Animate(0, 3, eOnce, eBlock);
 //  cMonty.x=270;
 //  cMonty.y=633;
 //  cMonty.UnlockView();
 //  cMonty.LoseInventory(iHeliumTank);
 //  oHeliumTank.Visible=true;
 //  oHeliumTank.SetPosition(1127, 519);
// }
}

function repeatedly_execute_always()
{
  if (UIMouseMode==true)
  {
    mouse.Mode=2;
  }
  if (cHuman01.View==59 && (cHuman01.Frame==5))//|| cHuman01.Frame==7|| cHuman01.Frame==9))
  {
    //aKnock.Play();
  }
  if (cHuman01.View==59 && (cHuman01.Frame==5|| cHuman01.Frame==7|| cHuman01.Frame==9))
  {
    oKnockLines.Visible=true;
    aKnock.Play();
  }
  else
  {
    oKnockLines.Visible=false;
  }
if (cHuman01.IsCollidingWithChar(cMonty) && cHuman01.View==16 && cMonty.View==2 && cMonty.ActiveInventory!=iSaw)// && cHuman01.y>cMonty.y && HumWalkUp==1)
 {
   if (Puzzle01Stage==3)
   {
     Puzzle01Stage=2;
     PuzzleNum--;
   }
   //QuitGame(1);
   cMonty.LockView(53);                                   //These two were uncommented,  but there's a glitch if you walk
   ShouldExplode=true;                                   //Into human while on the way to put balloons in place...
   //cMonty.LockView(28);
   //cMonty.Animate(0, 3, eOnce, eNoBlock);
   //cMonty.x=270;
   //cMonty.y=633;
   //cMonty.UnlockView();
   //cMonty.LoseInventory(iHeliumTank);
   //oHeliumTank.Visible=true;
   //oHeliumTank.SetPosition(1127, 519);
 }
if ((Puzzle01Stage==2 || Puzzle01Stage==3 || Puzzle01Stage==4) && cHuman01.y ==HumanWalkAY)
 {
   cHuman01.Walk(HumanWalkBX, HumanWalkBY, eNoBlock, eAnywhere);
   HumWalkUp=2;
 }
 //exec 4
if ((Puzzle01Stage==2 || Puzzle01Stage==3 || Puzzle01Stage==4) && cHuman01.y==HumanWalkBY)
 {
   cHuman01.Walk(HumanWalkAX, HumanWalkAY, eNoBlock, eAnywhere);
   HumWalkUp=1;
 }
 if (cCat.x<oAtticDoor.X+70)
 {
   if (IsAtticDoorOpen==false)
   {
   IsAtticDoorOpen=true;
   oAtticDoor.SetView(49);
   oAtticDoor.Animate(0, 2, eOnce, eNoBlock);
   }
 }
 if (TshirtBlowUp==true)
 {
   TshirtBlowUp=false;
   Tshirtblow();
 }
 if (tshirtFlying==true)
 {
   //oBloodPuddle.Graphic=508;
   int t = tshirtFrame;
   oTShirt.X = tshirtStartX + t * tshirtXSpeed;
   float ft = IntToFloat(t);
   float ypos = IntToFloat(tshirtYSpeed) * ft - ft * ft * tshirtGravity;
   oTShirt.Y = tshirtStartY - FloatToInt(ypos, eRoundNearest);
  
   tshirtFrame++;

   // Stop the animation after a certain time
   if (t > 30 || oTShirt.Y > 700) // Adjust as needed
   {
     tshirtFlying = false;
   }
 }
 if (MakeBloodPuddle==true)
 {
   MakeBloodPuddle=false;
   oBloodPuddle.Baseline=cHuman01.y-30;
   oBloodPuddle.X=cHuman01.x-70;
   oBloodPuddle.Y=cHuman01.y+15;
 }
 if (MakeBigBloodPuddle==true)
 {
   MakeBigBloodPuddle=false;
   oBloodPuddle.Graphic=508;
 }
}

function room_AfterFadeIn()
{
  if (SoftLoadLiving==true)
  {
    SoftLoadLiving=false;
    SoftLoad();
  }
  skullhead=oSkullCandles;
  if (Puzzle01Stage<2)
  {
    oEyeballs.Visible=false;
    oEyefall.Visible=false;
  }
  if (Puzzle01Stage<7)
  {
    RemoveWalkableArea(5);
  }
  if (DoorUp != true)
  {
    RemoveWalkableArea(4);
    RemoveWalkableArea(5);
  }
  if (Puzzle01Stage==4)
  {
    if (ShowSillyHead==false)
    {
      ShowSillyHead=true;
      Wait(UIPapersDelaySlow);
      gQuestKitchen.ZOrder=0;
      gQuestKitchen.Visible=true;
      aPapermix.Play();
      Wait(UIPapersDelayFast);
      gQuestAttic.ZOrder=1;
      gQuestAttic.Visible=true;
      aPapermix.Play();
      Wait(UIPapersDelayFast);
      gQuestLivingRoom.ZOrder=2;
      gQuestLivingRoom.Visible=true;
      aPapermix.Play();
      Wait(UIPapersDelaySlow);
      gQuestLivingRoom.Controls[7].AsLabel.Visible=true;
      aWriting.Play();
    }
  }
  confettiobj = oConfetti;
  BackgroundMusic = aAllegroSonat1.Play();
  BackgroundMusic.Volume =50;
  //AudioChannel *channel = aSpookybackground01.Play();
  //channel.Volume = 50;
}

function oHeliumTank_Interact(Object *theObject, CursorMode mode)
{
  if (Puzzle01Stage == 2)
  {
   WalkToObjectAndPickup(theObject);
   cMonty.AddInventory(iHeliumTank);
  }
  else if (Puzzle01Stage == 0)
  {
    cHuman01.Say("Yo, talk to me first, bud.");
  }
  else if (Puzzle01Stage == 1)
  {
   cHuman01.Say("Sign here first, Greenface.");
  }
}

function oDynamite_Interact(Object *theObject, CursorMode mode)
{
  WalkToObjectAndPickup(theObject);
  cMonty.AddInventory(iDynamite);
}

function oMeatGrinder_Interact(Object *theObject, CursorMode mode)
{
  WalkToObjectAndPickup(theObject);
  cMonty.AddInventory(iMeatGrinder);
}

function oObject2_UseInv(Object *theObject, CursorMode mode)
{
if (player.ActiveInventory == iIntestBanner)
  {
    cMonty.Walk(295, 195, eBlock, eWalkableAreas);
    cMonty.LockView(43);
    cMonty.Animate(0, 3, eOnce, eBlock);
    oStreamersGrey.Graphic = 71;
    cMonty.LoseInventory(iIntestine);
    aReward.Play();
    oConfetti.X = theObject.X-50;
    oConfetti.Y = theObject.Y+50;
    oConfetti.SetView(14);
    oConfetti.Animate(0, 5, eOnce);
    //gQuestLivingRoom.Controls[11].AsButton.Visible=true;
    cMonty.UnlockView();
    cMonty.Animate(1, 3, eOnce, eNoBlock);
    PuzzleNum++;
    CrossOffList(1, gQuestLivingRoom, CrossStreamers, null);
    //sendInTheFriends();
    cMonty.UnlockView();
  }
}

function oEyeBalloons_UseInv(Object *theObject, CursorMode mode)
{
if (player.ActiveInventory == iEyeBalloons)
  {
    cMonty.Walk(theObject.X+125, theObject.Y+100, eBlock);
    if (cMonty.View==53)
    {
    }
    else
    {
    oEyeBalloons.Graphic = 73;
    cMonty.LoseInventory(iEyeBalloons);
    Puzzle01Stage = 3;
    String puzzlestage = String.Format("Stage: %d", Puzzle01Stage);
    //LabelPuzzleStage.Text = puzzlestage;
    aReward.Play();
    oConfetti.X = theObject.X-50;
    oConfetti.Y = theObject.Y+50;
    oConfetti.SetView(14);
    oConfetti.Animate(0, 5, eOnce);
    PuzzleNum++;
    sendInTheFriends();
    RaiseBalloons();
    if (cMonty.View==53)
    {
      
    }
    else
    {
    CrossOffList(1, gQuestLivingRoom, Cross_Balloons, null);
    //gQuestLivingRoom.Controls[9].AsButton.Visible=true;
    //make human walk to block stairs
    HumanWalkAX=780;
    HumanWalkAY=508;
    HumanWalkBX=1040;
    HumanWalkBY=582;
    cHuman01.Walk(HumanWalkAX, HumanWalkAY, eNoBlock, eAnywhere);
    }
    }


  }
}

function oObject2_Interact(Object *theObject, CursorMode mode)
{
  WalkToObjectAndPickup(theObject);
  cMonty.AddInventory(iBread);
}

function oBurgers_UseInv(Object *theObject, CursorMode mode)
{
if (player.ActiveInventory == iBurgers)
  {
    cMonty.Walk(theObject.X, theObject.Y, eBlock, eWalkableAreas);
    oBurgers.Graphic = 77;
    cMonty.LoseInventory(iBurgers);
    aReward.Play();
    oConfetti.X = theObject.X-50;
    oConfetti.Y = theObject.Y+50;
    oConfetti.SetView(14);
    oConfetti.Animate(0, 5, eOnce);
    PuzzleNum++;
    //gQuestLivingRoom.Controls[12].AsButton.Visible=true;
    CrossOffList(1, gQuestLivingRoom, CrossBurgers, null);
    //sendInTheFriends();
  }
}

function oCandles_Interact(Object *theObject, CursorMode mode)
{
  WalkToObjectAndPickupTall(theObject);
  cMonty.AddInventory(iCandles);
}

function oHeadCandles_UseInv(Object *theObject, CursorMode mode)
{
if (player.ActiveInventory == iSkullCandles)
  {
    cMonty.Walk(theObject.X, theObject.Y, eBlock, eWalkableAreas);
    oHeadCandles.Graphic = 302;
    oHeadCandles.SetView(45);
    oHeadCandles.Animate(0, 2, eRepeat, eNoBlock);
    cMonty.LoseInventory(iSkullCandles);
    aReward.Play();
    oConfetti.X = theObject.X-50;
    oConfetti.Y = theObject.Y+50;
    oConfetti.SetView(14);
    oConfetti.Animate(0, 5, eOnce);
    //gQuestLivingRoom.Controls[10].AsButton.Visible=true;
    Wait(20);
    aFire.Play();
    oShelf.SetView(44);
    oShelf.Animate(0, 3, eOnce, eBlock);
    int TimerY = oClock.Y + 300; // Make Clock fall to floor
    while (oClock.Y < TimerY)
      {
        oClock.Y += 10;              // Move object up by 1 pixel
        Wait(1);                  // Pause for a short time to make the movement smooth
      }
    CanGetTimer=true;
    PuzzleNum++;
    CrossOffList(1, gQuestLivingRoom, CrossCandles, null);
    sendInTheFriends();
  }
 else if (player.ActiveInventory==iHeadCandles)
 {
   cMonty.Think("Hmm, these candles aren't lit yet.");
   Mouse.Mode=2;
 }
 else if (player.ActiveInventory==iCandles)
 {
   cMonty.Think("The candles would just fall down though");
 }
 
}

function oStreamersGrey_Look(Object *theObject, CursorMode mode)
{
 if (theObject.Graphic == 70)
 {
   player.Say("I need to find something long and pretty to hang from the walls.");
 }
}

function oEyeBalloons_Look(Object *theObject, CursorMode mode)
{
 if (theObject.Graphic == 72)
 {
   player.Say("I could probably use helium on any round things to create balloons...");
 }
}

function oSpoon_Look(Object *theObject, CursorMode mode)
{
  player.Say("The pen is mightier than the... uh... what was I thinking?");
}

function oSaw_Look(Object *theObject, CursorMode mode)
{
player.Say("An old rusty saw. For sawing heads off, perhaps?");
}

function oCandles_Look(Object *theObject, CursorMode mode)
{
player.Say("Gotta jab these candles into something hole-y");
}

function oHeliumTank_Look(Object *theObject, CursorMode mode)
{
player.Say("Helium! Can turn most round things into balloons right?");
}

function oObject2_Look(Object *theObject, CursorMode mode)
{
player.Say("Bread is good for sandwhiches to feed my friends.");
}

function oMeatGrinder_Look(Object *theObject, CursorMode mode)
{
player.Say("A meat grinder! To grind 'meat'. For Sandwhiches!");
}

function oHeadCandles_Look(Object *theObject, CursorMode mode)
{
player.Say("A candle centerpiece will delight my friends.");
}

function oBurgers_Look(Object *theObject, CursorMode mode)
{
player.Say("Must make 'burgers' before my friends arrive...");
}

function oDynamite_Look(Object *theObject, CursorMode mode)
{
player.Say("Dy-No-MITE! Maybe I can blow something (or someONE) up with this.");
}

function oFrontDoor_Interact(Object *theObject, CursorMode mode)
{
  if (oFrontDoor.Y > 500)
  {
    cMonty.Walk(oFrontDoor.X, oFrontDoor.Y, eBlock, eWalkableAreas);
    aOpenDoor.Play();
    cHuman01.SetIdleView(-1, 0);
    int finalY = oFrontDoor.Y - 200;  // Raise the object by 50 pixels
    while (oFrontDoor.Y > finalY)
      {
        oFrontDoor.Y -= 5;              // Move object up by 1 pixel
        Wait(1);                  // Pause for a short time to make the movement smooth
      }
     DoorUp=true;
     RestoreWalkableArea(4);
  }
  //if (oFrontDoor.Frame == 0)
  //{
  //  oFrontDoor.SetView(10);
    //oFrontDoor.Animate(0, 1, eOnce,  eBlock);
    //oFrontDoor.Baseline = 560;
  //}
  //else if (oFrontDoor.Frame == 7)
  //{
  //  oFrontDoor.Baseline = 560;
  //  oFrontDoor.SetView(10);
  //  oFrontDoor.Animate(0, 1, eOnce,  eNoBlock, eBackwards);
  //}
}

function oBackgroundMusic_Interact(Object *theObject, CursorMode mode)
{
  BackgroundMusic.Pause();
}

function hKitchen_WalkOn(Hotspot *theHotspot)
{
 if (Puzzle01Stage > 2 && Puzzle01Stage!=11)
 {
  player.ChangeRoom(4,  1050, 1382);
 }
 else if (Puzzle01Stage!=11)
 {
   player.SayBackground("I need to get my helium first.");
 }
}

function oFrontDoor_Look(Object *theObject, CursorMode mode)
{
player.Say("Do I hear a knock at the door?");
}

function hKitchen_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
}

function hHotAttic_WalkOn(Hotspot *theHotspot)
{
if (Puzzle01Stage > 2)
{
  cMonty.ChangeRoom(5, 600, 575, eDirectionLeft);
}
else
{
  Display("I should take care of the balloons before going up to get my 'tools'...");
  player.Walk(630, 300, eBlock);
  //player.SayBackground("I shouldn't go to the attic yet.");
}
}

function room_FirstLoad()
{
//BeginTimer();
Game.SpeechFont = eFontSuperComic;
oEyeballs.Visible=false;
  oEyefall.Visible=false;
  SoftLoad();
//  mouse.Mode=2;
//  Wait(UIPapersDelaySlow);
// gQuestKitchen.Visible=true;
// aPapermix.Play();
// Wait(UIPapersDelayFast);
// gQuestAttic.Visible=true;
// aPapermix.Play();
// Wait(UIPapersDelayFast);
// gQuestLivingRoom.Visible=true;
// aPapermix.Play();
// Wait(UIPapersDelaySlow);
// gQuestLivingRoom.Controls[2].AsLabel.Visible=true;
// aWriting.Play();
// Wait(UIPapersDelaySlow);
// gQuestLivingRoom.Controls[3].AsLabel.Visible=true;
// aWriting.Play();
// Wait(UIPapersDelaySlow);
//  gQuestLivingRoom.Controls[4].AsLabel.Visible=true;
// aWriting.Play();
// Wait(UIPapersDelaySlow);
//  gQuestLivingRoom.Controls[5].AsLabel.Visible=true;
// aWriting.Play();
// Wait(UIPapersDelaySlow);
}

function room_Load()
{
  oEyeballs.Visible=false;
  oEyefall.Visible=false;
  if (Puzzle01Stage==2 || Puzzle01Stage==3 || Puzzle01Stage==4)
  {
    cHuman01.Walk(HumanWalkAX, HumanWalkAY, eNoBlock);
  }
  if (SoftReset==true)
  {
    SoftReset=false;
    cCat.ChangeRoom(3);
    cCat.ChangeView(47);
    cCat.x=348;
    cCat.y=294;
    cHuman01.ChangeRoom(3);
    cHuman01.ChangeView(3);
    cHuman01.SetIdleView(59, 3);
    cHuman01.x=1127;
    cHuman01.y=512;
    cHuman01.SetTextProperty("Description", "Character");
    cHuman01.SpeechView=11;
    cHuman01.SetWalkSpeed(10, 10);
    oAtticDoor.SetView(49, 0, 0);
    oStreamersGrey.Graphic=70;
    oEyeBalloons.Graphic=72;
    oEyeBalloons.X=254;
    oEyeBalloons.Y=456;
    oCandles.X=635;
    oCandles.Y=165;
    oHeadCandles.Graphic=81;
    oFrontDoor.X=1022;
    oFrontDoor.Y=614;
    oBoardsL.Graphic=261;
    oBoardsR.Graphic=262;
    oShelf.Graphic=341;
    oClock.X=498;
    oClock.Y=314;
    oHeliumTank.X=1127;
    oHeliumTank.Y=519;
    oCarpet.Graphic=450;
    oTable.Graphic=212;
    oBurgers.Graphic=212;
    oEyeballs.X=835;
    oEyeballs.Y=680;
    cGhosty.x=1710;
    cGhosty.y=356;
    cOcty.x=1582;
    cOcty.y=360;
    cBuzzy.x=1602;
    cBuzzy.y=522;
    gPanel.Visible=false;
    gIconbar.Visible=true;
    ShouldCountTimer=true;
  }
}

function oEyeballs_Interact(Object *theObject, CursorMode mode)
{
  WalkToObjectAndPickup(theObject);
  cMonty.AddInventory(iEyes);
}

function oHead_Interact(Object *theObject, CursorMode mode)
{
  WalkToObjectAndPickup(theObject);
  cMonty.AddInventory(iHead);
}

function oClock_Interact(Object *theObject, CursorMode mode)
{
if (CanGetTimer==true)
{
  WalkToObjectAndPickup(theObject);
  cMonty.AddInventory(iTimer);
}
else
{
  if (cMonty.y>oClock.Y)
  {
  cMonty.Think("It's too high for me to reach... right now");
  }
  else
  cMonty.Say("Okay, so now it's too low... I must need to do something else.");
}
}

function oAtticDoor_Interact(Object *theObject, CursorMode mode)
{
if(Puzzle01Stage<3)
{
  cMonty.Say("I need my tools from the attic, but the door is jammed.");
}
}

function oBoardsR_Interact(Object *theObject, CursorMode mode)
{
if (oBoardsR.Graphic==262)
{
  cMonty.Think("I can't go into the kitchen with these boards in the way.");
}
}

function oBoardsL_Interact(Object *theObject, CursorMode mode)
{
if (oBoardsR.Graphic==262)
{
  cMonty.Think("I can't go into the kitchen with these boards in the way.");
}
}

function oSkullCandles_Interact(Object *theObject, CursorMode mode)
{
WalkToObjectAndPickup(theObject);
cMonty.AddInventory(iSkullCandles);
}

function oNightStand_Interact(Object *theObject, CursorMode mode)
{
if (GotPen==false)
{
if (theObject.Graphic==163)
{
  cMonty.Walk(theObject.X-10, theObject.Y, eBlock, eWalkableAreas);
  theObject.Graphic=445;
  cMonty.Say("Ooh a nice looking pen!");
}
else if (theObject.Graphic==445)
{
  cMonty.Walk(theObject.X-10, theObject.Y, eBlock, eWalkableAreas);
  cMonty.LockView(43);
  cMonty.Animate(0, 3, eOnce, eBlock);
  cMonty.UnlockView();
  theObject.Graphic=163;
  cMonty.AddInventory(iSpoon);
  cMonty.Say("Can't wait to use this pointy pen!");
  GotPen=true;
  FirstChest=true;
}
}
}

function oCarpet_Look(Object *theObject, CursorMode mode)
{
cMonty.Think("A carpet would look nice here.");
}

function oCarpet_UseInv(Object *theObject, CursorMode mode)
{
if (player.ActiveInventory==iCarpetRoll)
{
  cMonty.Walk(theObject.X, theObject.Y, eBlock, eWalkableAreas);
  cMonty.LockView(20);
  cMonty.Animate(0, 3, eOnce, eBlock);
  cMonty.UnlockView();
  theObject.Graphic=444;
  cMonty.LoseInventory(iCarpetRoll);
  oTable.Graphic=454;
  theObject.SetTextProperty("Description", "Floor"); 
}

}

function oCarpetRoll_Interact(Object *theObject, CursorMode mode)
{
WalkToObjectAndPickup(theObject);
cMonty.AddInventory(iCarpetRoll);
}

function oTable_UseInv(Object *theObject, CursorMode mode)
{
if (player.ActiveInventory==iFoldingTable)
{
  cMonty.Walk(theObject.X, theObject.Y, eBlock, eWalkableAreas);
  cMonty.LockView(43);
  cMonty.Animate(0, 3, eOnce, eBlock);
  cMonty.UnlockView();
  theObject.Graphic=66;
  cMonty.LoseInventory(iFoldingTable);
  oBurgers.Graphic=76;
}
}

function oFoldingTable_Interact(Object *theObject, CursorMode mode)
{
WalkToObjectAndPickup(theObject);
cMonty.AddInventory(iFoldingTable);
}

function oTShirt_Interact(Object *theObject, CursorMode mode)
{
WalkToObjectAndPickup(theObject);
cMonty.AddInventory(iTee);
}

function oBloodPuddle_UseInv(Object *theObject, CursorMode mode)
{
if (player.ActiveInventory==iPaintBrush)
{
  cMonty.Walk(oBloodPuddle.X, oBloodPuddle.Y, eBlock, eWalkableAreas);
  cMonty.LockView(20);
  oPaintBrush02.X=cMonty.x+30;
  oPaintBrush02.Y=cMonty.y-20;
  cMonty.Animate(0, 3, eOnce, eBlock);
  oPaintBrush02.Graphic=510;
  cMonty.Animate(1, 3, eOnce, eBlock);
  oPaintBrush02.X=2000;
  cMonty.UnlockView();
  cMonty.LoseInventory(iPaintBrush);
  cMonty.AddInventory(iPaintBrushBlood);
}
}

function oTable_Look(Object *theObject, CursorMode mode)
{
cMonty.Say("This is a great spot to set my table.");
}
function oTShirt_Look(Object *theObject, CursorMode mode)
{
cMonty.Say("I could use this t-shirt for something. Reduce, reuse, recycle, regurgitate...");
}

function oNightStand_UseInv(Object *theObject, CursorMode mode)
{
if (player.ActiveInventory==iSpoon)
player.Say("I don't want to put it back already, the fun hasn't even started yet.");
}
